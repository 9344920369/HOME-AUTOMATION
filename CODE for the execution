#include <WiFi.h>  // Load Wi-Fi library

// Replace with your network credentials
const char* ssid = "OPPO A74 5G";
const char* password = "12345678";

// Set web server port number to 80
WiFiServer server(80);

// Store the HTTP request
String header;

// Assign output variable to GPIO pin
const int output26 = 2;

// Track current and previous time for timeout handling
unsigned long currentTime = millis();
unsigned long previousTime = 0;
const long timeoutTime = 2000;  // 2 seconds

void setup() {
  Serial.begin(115200);

  // Set GPIO as output
  pinMode(output26, OUTPUT);
  digitalWrite(output26, LOW);  // Start with the output off

  // Connect to Wi-Fi
  Serial.println("Connecting to WiFi...");
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  // Connection successful
  Serial.println("");
  Serial.println("WiFi connected.");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  server.begin();  // Start the server
}

void loop() {
  WiFiClient client = server.available();  // Listen for incoming clients

  if (client) {
    Serial.println("New Client.");
    String currentLine = "";
    currentTime = millis();
    previousTime = currentTime;

    while (client.connected() && currentTime - previousTime <= timeoutTime) {
      currentTime = millis();

      if (client.available()) {
        char c = client.read();
        Serial.write(c);
        header += c;

        if (c == '\n') {
          // End of HTTP request
          if (currentLine.length() == 0) {
            // Send HTTP response
            client.println("HTTP/1.1 200 OK");
            client.println("Content-type:text/html");
            client.println();

            // HTML content
            client.println("<!DOCTYPE html><html>");
            client.println("<head><title>ESP32 Bulb Control</title></head>");
            client.println("<body><h1>ESP32 Web Server</h1>");
            client.println("<p><a href=\"/on\"><button>Turn ON</button></a></p>");
            client.println("<p><a href=\"/off\"><button>Turn OFF</button></a></p>");
            client.println("</body></html>");

            // Control GPIO based on request
            if (header.indexOf("GET /on") >= 0) {
              Serial.println("GPIO 2 ON");
              digitalWrite(output26, HIGH);
            } else if (header.indexOf("GET /off") >= 0) {
              Serial.println("GPIO 2 OFF");
              digitalWrite(output26, LOW);
            }

            // Break the while loop
            break;
          } else {
            currentLine = "";
          }
        } else if (c != '\r') {
          currentLine += c;
        }
      }
    }

    // Clear the header and close connection
    header = "";
    client.stop();
    Serial.println("Client disconnected.");
    Serial.println("");
  }
}
